name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  # Usamos diretamente o secret aqui, não podemos referenciar env dentro de env
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  IMAGE_NAME:    ${{ secrets.ECR_REGISTRY }}:latest

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Prepare test environment
        working-directory: projeto_datathon_brunag
        run: |
          mkdir -p model
          # exporta variáveis de ambiente pro restante do job
          echo "PATH_MODEL=$(pwd)/model/modelo_classificador.pkl" >> $GITHUB_ENV
          mkdir -p data/parquet/applicants data/parquet/prospects data/parquet/vagas
          echo "PATH_PARQUET_APPLICANTS=$(pwd)/data/parquet/applicants" >> $GITHUB_ENV
          echo "PATH_PARQUET_PROSPECTS=$(pwd)/data/parquet/prospects" >> $GITHUB_ENV
          echo "PATH_PARQUET_VAGAS=$(pwd)/data/parquet/vagas" >> $GITHUB_ENV

      - name: Install dependencies
        working-directory: projeto_datathon_brunag
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt pytest

      - name: Run endpoint tests
        working-directory: projeto_datathon_brunag
        run: |
          pytest tests/test_api_endpoints.py --maxfail=1 --disable-warnings -q

  build-and-push:
    name: Build & Push Docker Image
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region:            ${{ secrets.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: projeto_datathon_brunag
          file:    projeto_datathon_brunag/Dockerfile
          push:    true
          tags:    ${{ env.IMAGE_NAME }}

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Make deploy.sh executable
        run: chmod +x projeto_datathon_brunag/deploy.sh

      - name: Deploy to EC2
        run: projeto_datathon_brunag/deploy.sh
        env:
          IMAGE_NAME:     ${{ env.IMAGE_NAME }}
          REGISTRY_TYPE:  ecr
          AWS_REGION:     ${{ secrets.AWS_REGION }}
          EC2_USER:       ${{ secrets.EC2_USER }}
          EC2_HOST:       ${{ secrets.EC2_HOST }}
          EC2_KEY_PATH:   ~/.ssh/id_rsa
          CONTAINER_NAME: datathon-api
          REMOTE_PORT:    80
          CONTAINER_PORT: 8000
