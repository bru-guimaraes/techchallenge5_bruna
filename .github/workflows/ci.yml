# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}

      - name: Prepare test environment
        working-directory: projeto_datathon_brunag/src
        run: |
          # create an empty model file so import in application.py won't fail
          mkdir -p model
          touch model/pipeline.joblib

          # tell your app where to find it
          echo "PATH_MODEL=$(pwd)/model/pipeline.joblib" >> $GITHUB_ENV

          # create the empty parquet dirs your /match endpoint tests expect
          mkdir -p data/parquet/{applicants,prospects,vagas}
          echo "PATH_PARQUET_APPLICANTS=$(pwd)/data/parquet/applicants" >> $GITHUB_ENV
          echo "PATH_PARQUET_PROSPECTS=$(pwd)/data/parquet/prospects" >> $GITHUB_ENV
          echo "PATH_PARQUET_VAGAS=$(pwd)/data/parquet/vagas" >> $GITHUB_ENV

      - name: Install runtime dependencies
        working-directory: projeto_datathon_brunag/src
        run: |
          pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Install dev dependencies
        working-directory: projeto_datathon_brunag/src
        run: pip install pytest

      - name: Run all tests
        working-directory: projeto_datathon_brunag/src
        run: pytest tests/ --maxfail=1 --disable-warnings -q
