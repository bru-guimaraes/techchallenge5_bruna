name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/src/requirements.txt') }}

      - name: Prepare test environment
        run: |
          # Cria pasta de modelo e de dados fake
          mkdir -p src/model
          mkdir -p src/data/parquet/{applicants,prospects,vagas}
          # Exporta variÃ¡veis de ambiente
          echo "PATH_MODEL=$(pwd)/src/model/pipeline.joblib" >> $GITHUB_ENV
          echo "PATH_PARQUET_APPLICANTS=$(pwd)/src/data/parquet/applicants" >> $GITHUB_ENV
          echo "PATH_PARQUET_PROSPECTS=$(pwd)/src/data/parquet/prospects" >> $GITHUB_ENV
          echo "PATH_PARQUET_VAGAS=$(pwd)/src/data/parquet/vagas" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --no-cache-dir -r src/requirements.txt pytest

      - name: Run all tests
        run: pytest src/tests/ --maxfail=1 --disable-warnings -q

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 src/

      - name: Build Docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: src/Dockerfile
          push: false
          tags: seu-usuario/projeto-datathon:latest
          cache-from: type=registry,ref=seu-usuario/projeto-datathon:latest
          cache-to:   type=inline
